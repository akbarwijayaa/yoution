{
	"id": "85b48bff56573ec66f34f93794256f4e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/reclaim/Random.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n// implementation from: https://stackoverflow.com/a/67332959\n// Utils for random number generation\nlibrary Random {\n\t/**\n\t * @dev generates a random number from the given seed\n\t * This will always return the same number for the same seed & block\n\t */\n\tfunction random(uint256 seed) internal view returns (uint) {\n\t\treturn uint(keccak256(abi.encodePacked(block.prevrandao, block.timestamp, seed)));\n\t}\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"src/reclaim/Random.sol": {
				"Random": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/reclaim/Random.sol\":156:459  library Random {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/reclaim/Random.sol\":156:459  library Random {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220774747d2c3cf443d93c0923dd35cc6873fd2c8b628171e2cffd324163f0c711664736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220774747d2c3cf443d93c0923dd35cc6873fd2c8b628171e2cffd324163f0c711664736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x4747D2C3CF443D93C0923DD35CC6873FD2C8B628171E2CFF 0xD3 0x24 AND EXTCODEHASH 0xC PUSH18 0x1664736F6C634300081B0033000000000000 ",
							"sourceMap": "156:303:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220774747d2c3cf443d93c0923dd35cc6873fd2c8b628171e2cffd324163f0c711664736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x4747D2C3CF443D93C0923DD35CC6873FD2C8B628171E2CFF 0xD3 0x24 AND EXTCODEHASH 0xC PUSH18 0x1664736F6C634300081B0033000000000000 ",
							"sourceMap": "156:303:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"random(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 156,
									"end": 459,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 156,
									"end": 459,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 156,
									"end": 459,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 156,
									"end": 459,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 156,
									"end": 459,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 156,
									"end": 459,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 156,
									"end": 459,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 156,
									"end": 459,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 156,
									"end": 459,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 156,
									"end": 459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 156,
									"end": 459,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 156,
									"end": 459,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 156,
									"end": 459,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 156,
									"end": 459,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 156,
									"end": 459,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 156,
									"end": 459,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 156,
									"end": 459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 156,
									"end": 459,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 156,
									"end": 459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 156,
									"end": 459,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 156,
									"end": 459,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 156,
									"end": 459,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 156,
									"end": 459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 156,
									"end": 459,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 156,
									"end": 459,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 156,
									"end": 459,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 156,
									"end": 459,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 156,
									"end": 459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 156,
									"end": 459,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 156,
									"end": 459,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 156,
									"end": 459,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 156,
									"end": 459,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 156,
									"end": 459,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 156,
									"end": 459,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 156,
									"end": 459,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220774747d2c3cf443d93c0923dd35cc6873fd2c8b628171e2cffd324163f0c711664736f6c634300081b0033",
									".code": [
										{
											"begin": 156,
											"end": 459,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 156,
											"end": 459,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 156,
											"end": 459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 156,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 156,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 156,
											"end": 459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 156,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 459,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"src/reclaim/Random.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/reclaim/Random.sol\":\"Random\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/reclaim/Random.sol\":{\"keccak256\":\"0xa655d097eadd8170296bbc2362347c8a4111cf791a5a49fb61003c5474731831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43ac2db3f6fe32d357071f92bf23e75e78833ae663f540db940568efaa80634c\",\"dweb:/ipfs/QmRnHDLtCeov3vaPVYqDLwVhJfJsFj9ia1AG9aBgLkwUdB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"src/reclaim/Random.sol": {
				"ast": {
					"absolutePath": "src/reclaim/Random.sol",
					"exportedSymbols": {
						"Random": [
							25
						]
					},
					"id": 26,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Random",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 25,
							"linearizedBaseContracts": [
								25
							],
							"name": "Random",
							"nameLocation": "164:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "368:89:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 14,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "411:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 15,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "417:10:0",
																			"memberName": "prevrandao",
																			"nodeType": "MemberAccess",
																			"src": "411:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 16,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "429:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 17,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "435:9:0",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "429:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 18,
																			"name": "seed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4,
																			"src": "446:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 12,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "394:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 13,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "398:12:0",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "394:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 19,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "394:57:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 11,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "384:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "384:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 10,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "379:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 9,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "379:4:0",
															"typeDescriptions": {}
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "379:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 8,
												"id": 22,
												"nodeType": "Return",
												"src": "372:81:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "174:133:0",
										"text": " @dev generates a random number from the given seed\n This will always return the same number for the same seed & block"
									},
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "random",
									"nameLocation": "318:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "seed",
												"nameLocation": "333:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "325:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:14:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "362:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "362:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "361:6:0"
									},
									"scope": 25,
									"src": "309:148:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 26,
							"src": "156:303:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:428:0"
				},
				"id": 0
			}
		}
	}
}